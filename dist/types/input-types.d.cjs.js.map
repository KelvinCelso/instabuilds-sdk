{"version":3,"sources":["../../src/types/input-types.d.ts"],"sourcesContent":["// src/types/input-types.ts\n\n/**\n * Represents the input for a ChatGPT API request.\n * @interface\n */\nexport interface ChatGPTInput {\n  /** Array of message objects representing the conversation */\n  messages: Array<{\n    /** The role of the message sender */\n    role: 'user' | 'assistant' | 'system';\n    /** The content of the message */\n    content: string\n  }>;\n  /** Optional parameters for the API call */\n  options?: {\n    /** Controls randomness: 0.0 is deterministic, 1.0 is very random */\n    temperature?: number;\n    /** The maximum number of tokens to generate */\n    max_tokens?: number;\n    // Add other relevant options\n  };\n}\n\n\nexport interface ClaudeInput {\n  prompt: string;\n  options?: {\n    // Claude-specific options\n  };\n}\n\nexport interface DALLEInput {\n  prompt: string;\n  options?: {\n    size?: '256x256' | '512x512' | '1024x1024';\n    n?: number;\n  };\n}\n\nexport interface DeepLInput {\n  text: string;\n  target_lang: string;\n  source_lang?: string;\n}\n\nexport interface ElevenLabsInput {\n  text: string;\n  voice_id?: string;\n  options?: {\n    stability?: number;\n    similarity_boost?: number;\n  };\n}\n\nexport interface GeminiInput {\n  prompt: string;\n  options?: {\n    // Gemini-specific options\n  };\n}"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}